{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/components/index/index.component.ts","webpack:///src/app/components/index/index.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/web-details/web-details.component.html","webpack:///src/app/components/web-details/web-details.component.ts","webpack:///src/app/services/mock-data.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","IndexComponent","textSearchSubject","webItems","subscribe","result","AppComponent","title","WebDetailsComponent","MockDataService","httpClient","searchText","get","toPromise","AppModule","NavbarComponent","SearchBarComponent","mockDataService","formControl","searchedString","searchSubject","textToSearch","valueChanges","validateSearch","next","value","pipe","text","length","getData","json","error","console","log","flag","routes","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.sass']\n})\nexport class IndexComponent implements OnInit {\n\n  textSearchSubject: Subject<string>;\n  webItems: any;\n\n  constructor() {\n    this.textSearchSubject = new Subject();\n    this.webItems = '';\n  }\n\n  ngOnInit(): void {\n    this.textSearchSubject.subscribe(result => {\n      this.webItems = result;\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n<app-search-bar [textSearchSubject]=\"textSearchSubject\"></app-search-bar>\n<app-web-details [webItems]=\"webItems\"></app-web-details>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'magmascraper';\n}\n","<app-index></app-index>\n","<div *ngFor=\"let item of webItems\">\n  {{item.url}}<br>\n  {{item.description}}<br>\n  {{item.tags}}<br />\n  {{item.search}}<br />  \n  <br/>  \n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-web-details',\n  templateUrl: './web-details.component.html',\n  styleUrls: ['./web-details.component.sass']\n})\nexport class WebDetailsComponent implements OnInit {\n\n  @Input() webItems:any;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService {\n\n  constructor(private readonly httpClient: HttpClient) {\n\n  }\n\n  getData(searchText: string): Promise<any> {\n    return this.httpClient\n            .get(`http://localhost:9090/data?search=${searchText}`)\n            .toPromise()\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { MockDataService } from '../app/services/mock-data.service';\nimport { WebDetailsComponent } from './components/web-details/web-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    NavbarComponent,\n    SearchBarComponent,\n    WebDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [MockDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  <mat-toolbar>\n   <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Scraper</span>\n  <span class=\"example-spacer\"></span>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n   <mat-icon>share</mat-icon>\n </button>\n</mat-toolbar>\n</p>\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { Subject, } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { MockDataService } from '../../services/mock-data.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.sass']\n})\nexport class SearchBarComponent implements OnInit {\n\n  formControl: FormControl = new FormControl('');\n  searchedString: string = '';\n  searchSubject: Subject<string> = new Subject();\n  @Output() textToSearch = new EventEmitter<string>();\n  @Input() textSearchSubject: Subject<string> = new Subject();\n\n  constructor(private readonly mockDataService: MockDataService) {\n  }\n\n  ngOnInit(): void {\n    this.formControl.valueChanges.subscribe(() => {\n      if (!this.validateSearch()) {\n        return;\n      }\n      this.searchSubject.next(this.formControl.value);\n    });\n\n    this.searchSubject\n      .pipe(\n        debounceTime(1100),\n        filter(text => text.length > 2),\n        distinctUntilChanged(),\n        switchMap((text) => {\n          return this.mockDataService.getData(text);\n      })\n      ).subscribe(json => {\n        this.textSearchSubject.next(json);\n      }, (error) => {\n        console.log('Error:', error);\n      });\n  }\n\n  private validateSearch(): boolean {\n\n    let flag = false;\n\n    if (!this.formControl.value || this.searchedString == this.formControl.value) {\n      this.searchedString = this.formControl.value;\n      flag = false;\n    }\n\n    if (this.formControl.value.length < 3) {\n      flag = false;\n    }\n\n    if ((this.formControl.value == 'Enter' && this.formControl.value.length > 3) || this.formControl.value.length > 2) {\n      flag = true;\n    }\n\n    this.searchedString = this.formControl.value;\n    return flag;\n  }\n\n}\n","<div class=\"parent-search-input\">\n  <mat-form-field class=\"search-input\">\n    <mat-label>Search</mat-label>\n    <input matInput [formControl]=\"formControl\" autocomplete=\"off\">\n  </mat-form-field>\n  <mat-icon aria-hidden=\"false\">search</mat-icon>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}