{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/index/index.component.ts","./src/app/components/index/index.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/web-details/web-details.component.html","./src/app/components/web-details/web-details.component.ts","./src/app/services/mock-data.service.ts","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.sass']\n})\nexport class IndexComponent implements OnInit {\n\n  textSearchSubject: Subject<string>;\n  webItems: any;\n\n  constructor() {\n    this.textSearchSubject = new Subject();\n    this.webItems = '';\n  }\n\n  ngOnInit(): void {\n    this.textSearchSubject.subscribe(result => {\n      this.webItems = result;\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n<app-search-bar [textSearchSubject]=\"textSearchSubject\"></app-search-bar>\n<app-web-details [webItems]=\"webItems\"></app-web-details>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'magmascraper';\n}\n","<app-index></app-index>\n","<div *ngFor=\"let item of webItems\">\n  {{item.url}}<br>\n  {{item.description}}<br>\n  {{item.tags}}<br />\n  {{item.search}}<br />  \n  <br/>  \n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-web-details',\n  templateUrl: './web-details.component.html',\n  styleUrls: ['./web-details.component.sass']\n})\nexport class WebDetailsComponent implements OnInit {\n\n  @Input() webItems:any;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService {\n\n  constructor(private readonly httpClient: HttpClient) {\n\n  }\n\n  getData(searchText: string): Promise<any> {\n    return this.httpClient\n            .get(`http://localhost:9090/data?search=${searchText}`)\n            .toPromise()\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { MockDataService } from '../app/services/mock-data.service';\nimport { WebDetailsComponent } from './components/web-details/web-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    NavbarComponent,\n    SearchBarComponent,\n    WebDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [MockDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  <mat-toolbar>\n   <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Scraper</span>\n  <span class=\"example-spacer\"></span>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n   <mat-icon>share</mat-icon>\n </button>\n</mat-toolbar>\n</p>\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { Subject, } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { MockDataService } from '../../services/mock-data.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.sass']\n})\nexport class SearchBarComponent implements OnInit {\n\n  formControl: FormControl = new FormControl('');\n  searchedString: string = '';\n  searchSubject: Subject<string> = new Subject();\n  @Output() textToSearch = new EventEmitter<string>();\n  @Input() textSearchSubject: Subject<string> = new Subject();\n\n  constructor(private readonly mockDataService: MockDataService) {\n  }\n\n  ngOnInit(): void {\n    this.formControl.valueChanges.subscribe(() => {\n      if (!this.validateSearch()) {\n        return;\n      }\n      this.searchSubject.next(this.formControl.value);\n    });\n\n    this.searchSubject\n      .pipe(\n        debounceTime(1100),\n        filter(text => text.length > 2),\n        distinctUntilChanged(),\n        switchMap((text) => {\n          return this.mockDataService.getData(text);\n      })\n      ).subscribe(json => {\n        this.textSearchSubject.next(json);\n      }, (error) => {\n        console.log('Error:', error);\n      });\n  }\n\n  private validateSearch(): boolean {\n\n    let flag = false;\n\n    if (!this.formControl.value || this.searchedString == this.formControl.value) {\n      this.searchedString = this.formControl.value;\n      flag = false;\n    }\n\n    if (this.formControl.value.length < 3) {\n      flag = false;\n    }\n\n    if ((this.formControl.value == 'Enter' && this.formControl.value.length > 3) || this.formControl.value.length > 2) {\n      flag = true;\n    }\n\n    this.searchedString = this.formControl.value;\n    return flag;\n  }\n\n}\n","<div class=\"parent-search-input\">\n  <mat-form-field class=\"search-input\">\n    <mat-label>Search</mat-label>\n    <input matInput [formControl]=\"formControl\" autocomplete=\"off\">\n  </mat-form-field>\n  <mat-icon aria-hidden=\"false\">search</mat-icon>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}